1. 按位非  ~
   逻辑非  not
2. list排序
l = sorted(list1)
l = list1.sort(reverse=True)  反向排序，或正向排序
3. 程序跳过异常继续处理
   Method 1: if... else....
   Method 2: try:
                command1   #可能会出现异常的一段代码
                command2   #如果try里的任意一个代码出现异常，直接跳转到except，程序继续运行
             except
                command3
                command4
    Method 3: for fn in files:      #使用语句继续执行
                  try:
                     data = pd.read_csv(fn)
                  except OSError:
                     pass 
                  continue
               data = pd.concat(data)
                  
   程序可以使用 throw 关键字显式地引发异常。           
   在 C# 中，catch 关键字用于定义异常处理程序。           
                   
4. Python实现matplotlib显示中文的方法详解
法1: import matplotlib.pyplot as plt
from matplotlib.font_manager import FontProperties # 步骤一
# ...
font = FontProperties(fname=r"c:\windows\fonts\simsun.ttc", size=14) # 步骤二
plt.xlabel("x轴", fontproperties=font) # 步骤三
plt.ylabel("y轴", fontproperties=font)

法2: import matplotlib.pyplot as plt
# ...
plt.xlabel("x轴")
plt.ylabel("y轴", fontproperties="SimSun") # 步骤一  （宋体）
plt.title("标题", fontproperties="SimHei") #     （黑体）

法3: import matplotlib.pyplot as plt
plt.rcParams['font.sans-serif'] = ['SimHei'] # 步骤一（替换sans-serif字体）
plt.rcParams['axes.unicode_minus'] = False  # 步骤二（解决坐标轴负数的负号显示问题）
#...
plt.xlabel("x轴")
plt.ylabel("y轴")
plt.title("标题")

法4: import matplotlib.pyplot as plt
font = {'family' : 'SimHei',
    'weight' : 'bold',
    'size'  : '16'}
plt.rc('font', **font)        # 步骤一（设置字体的更多属性）
plt.rc('axes', unicode_minus=False) # 步骤二（解决坐标轴负数的负号显示问题）
#...
plt.xlabel("x轴")
plt.ylabel("y轴")
plt.title("标题")
plt.show()

一些中文字体的英文名
宋体	SimSun
黑体	SimHei
微软雅黑	Microsoft YaHei
微软正黑体	Microsoft JhengHei
新宋体	NSimSun
新细明体	PMingLiU
细明体	MingLiU
标楷体	DFKai-SB
仿宋	FangSong
楷体	KaiTi
隶书	LiSu
幼圆	YouYuan
华文细黑	STXihei
华文楷体	STKaiti
华文宋体	STSong
华文中宋	STZhongsong
华文仿宋	STFangsong
方正舒体	FZShuTi
方正姚体	FZYaoti
华文彩云	STCaiyun
华文琥珀	STHupo
华文隶书	STLiti
华文行楷	STXingkai
华文新魏	STXinwei






